builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
builtin printf "\e]633;P;ContinuationPrompt=$(echo "$PS2" | sed 's/\x1b/\\\\x1b/g')\a"
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
builtin printf "\e]633;P;ContinuationPrompt=$(echo "$PS2" | sed 's/\x1b/\\\\x1b/g')\a"
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello terminal
pwd
ls --color=auto
cd freeCodeCamp
pwd
ls --color=auto
cd test
ls --color=auto
pwd
ls --color=auto -l
cd ..
cd test
cd ..
pwd
ls --color=auto
more package.json
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
clear
ls --color=auto
cd node_modules
__vsc_prompt_cmd_original
ls --color=auto -l
ls --color=auto -l
cd has
ls --color=auto
more README.md
ls --color=auto
more LICENSE-MIT
clear
pwd
ls --color=auto
cd src
ls --color=auto
pwd
cd /
cd src
cd node_modules
cd
cd node_moduels
cd node_modules
ls --color=auto
cd
ls --color=auto -l
pwd
cd /home
ls --color=auto
cd gitpod
cd ~
ls --color=auto
cd
ls --color=auto
clear
ls --color=auto
ls --color=auto
cd freecodecamp
cd freeCodeCamp/
ls --color=auto
cd node_modules/
cd has
ls --color=auto
cd src
list
clear
ls --color=auto
more
more index.js
cd ../
ls --color=auto
cd ../
cd ../
cd ../
cd freeCodeCamp/
cd node_modules/
cd ../../
ls --color=auto
clear
mkdir website
ls --color=auto
cd website/
ls --color=auto
echo hello website
touch index.html
touch style.css
ls --color=auto
rm style.css
touch styles.css
clear
ls --color=auto
touch index.js
touch .gitignore
ls --color=auto
ls --color=auto -l
ls --color=auto --help
clear
ls --color=auto -a
cd ..
ls --color=auto
cd website
cd .
clear
touch background.jpg
cd header.png
touch header.png
touch footer.png
ls --color=auto
rm footer.png
touch footer.jpeg
ls --color=auto
clear
touch roboto.font
touch lato.font
touch menlo.font
ls --color=auto
touch CodeAlly.svg
touch CodeRoad.svg
touch freeCodeCamp.svg
ls --color=auto
clear
mkdir images
ls --color=auto
cp background.jpg images
ls --color=auto
cd images
ls --color=auto
cd ..
clear
pwd
ls --color=auto
rm background.jpg
ls --color=auto
cp header.png images
cp footer.jpeg images
cd images
ls --color=auto
cd ..
ls --color=auto
rm header.png footer.jpeg
rm footer.
rm footer.jpeg
ls --color=auto
mv roboto.font roboto.woff
ls --color=auto
mv lato.font lato.ttf
mv menlo.font menlo.otf
ls --color=auto
mkdir fonts
ls --color=auto
mv roboto.woff fonts
find
cd fonts
cd ../
ls --color=auto
mv lato.ttf fonts
mv menlo.otf fonts
find
clear
mkdir client
ls --color=auto
mkdir client/src
mv index.html client/src
__vsc_prompt_cmd_original
find
clear
mv index.js client/src
mv styles.css client/src
find
find client
find
find --help
find -name index.html
find -name style.css
find -name styles.css
find -name src
tree
find
cd client
clear
mkdir assets
cd assets
ls --color=auto
mkdir images
cd images
touch background.jpg
cd ../../../
cd images
ls --color=auto
mv header.png ..
ls --color=auto
cd ../
ls --color=auto
find
find -name src
find -name images
mv header ./client/assets/images
ls --color=auto
mv header.png ./client/assets/images
find -name header.png
ls --color=auto
find -name footer.jpeg
mv ./images/footer.jpeg ./client/assets/images
fin
find
ls --color=auto
rmdir images
ls --color=auto
rm -r images
ls --color=auto
rm images
rm website/images
ls --color=auto
mkdir images
ls --color=auto
cd images
touch background.jpg
clear
cd ../
rm images/background.jpg
ls --color=auto
rmdir images
ls --color=auto
mkdir icons
ls --color=auto
rmdir icons
cd client
ls --color=auto
cd asstes
cd assets/
mkdir icons
ls --color=auto
rmdir icons
cd ../../
ls --color=auto
mkdir client/assets/icons
find
ls --color=auto
mv CodeAlly.svg ./client/assets/icons
free
tree
find
ls --color=auto
mv CodeRoad.svg ./client/assets/icons
mv freeCodeCamp.svg ./client/assets/icons
tree
find
mkdir fonts ./client/assets
mkdir ./client/assets/fonts
touch roboto-bold.woff ./client/assets/fonts
find
rm ./roboto-bold.woff
find
touch roboto-bold.woff ./client/assets/fonts/
find
rm ./roboto-bold.woff
touch ./client/assets/fonts roboto-bold.woff
find
rm ./roboto-bold.woff
touch ./client/assets/fonts/roboto-bold.woff
touch ./client/assets/fonts/roboto-light.woff
clear
find ./client/assets/fonts
touch ./client/assets/fonts/lato-bold.woff
find ./client/assets/fonts
rm ./client/assets/fonts/lato-bold.woff
ls --color=auto
find
rm ./client/assets/fonts/lato-bold.ttf
touch ./client/assets/fonts/lato-bold.ttf
touch ./client/assets/fonts/lato-light.ttf
find
find
rmdir ./fonts
find
rm -r ./fonts
find
rm --help
rm -r ./fonts
__vsc_prompt_cmd_original
ls --color=auto
clear
touch package.json
touch server.js
touch README.md
ls --color=auto
echo Yay!
echo I finished the boilerplate!
echo one more thing...
echo I made this boilerplate >> README.md
